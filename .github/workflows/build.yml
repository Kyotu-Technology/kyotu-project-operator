name: Build and push

on:
  push:
    branches: [main, '**']
    paths:
      - '**'
      - '!charts/**'
    tags:
      - '**'
      - '!helm-*'
  pull_request:
    branches: [main]
    paths:
      - '**'
      - '!charts/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Checkout

    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        export PATH="$PATH:$HOME/.cargo/bin"

    - name: Rust fmt
      run: cargo fmt -- --check

    #- name: Rust lint
    #  run: cargo clippy -- -D warnings
    #  continue-on-error: true

  # push only on tags but not on tags that start with helm- (e.g. helm-1.0.0)
  push_production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && !startsWith(github.ref, 'refs/tags/helm-')
    needs: build

    steps:
    - uses: actions/checkout@v3
      name: Checkout
    
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        cache-from: type=gha
        cache-to: type=gha
        push: true
        tags: |
         ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}:${{ steps.get_version.outputs.VERSION }}
         ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}:latest

  #push on commit to main
  push_dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build

    steps:
    - uses: actions/checkout@v3
      name: Checkout

    - name: Get short SHA
      id: get_short_sha
      run: echo ::set-output name=SHA::$(echo ${GITHUB_SHA} | cut -c1-7)

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        cache-from: type=gha
        cache-to: type=gha
        push: true
        tags: |
         ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}:dev-${{ steps.get_short_sha.outputs.SHA }}
