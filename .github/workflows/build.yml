name: Rust fmt, lint, and Cargo build with Kaniko

on:
  push:
    branches: [main, '*']
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Checkout

    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        export PATH="$PATH:$HOME/.cargo/bin"

    - name: Rust fmt
      run: cargo fmt -- --check

    #- name: Rust lint
    #  run: cargo clippy -- -D warnings
    #  continue-on-error: true

  push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build

    steps:
    - uses: actions/checkout@v3
      name: Checkout

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "SHORTSHA=${calculatedSha}" >> "${GITHUB_ENV}"

    - name: Docker build
      run: |
        docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ env.SHORTSHA }} .
        docker tag ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ env.SHORTSHA }} ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:${{ env.SHORTSHA }}
      

  
  
  