name: Rust fmt, lint, and Cargo build with Kaniko

on:
  push:
    branches: [main, '*']
    paths:
      - '**'
      - '!charts/**'
  pull_request:
    branches: [main]
    paths:
      - '**'
      - '!charts/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Checkout

    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        export PATH="$PATH:$HOME/.cargo/bin"

    - name: Rust fmt
      run: cargo fmt -- --check

    #- name: Rust lint
    #  run: cargo clippy -- -D warnings
    #  continue-on-error: true

  push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build

    steps:
    - uses: actions/checkout@v3
      name: Checkout
    
    - name: Set short git commit SHA
      id: vars
      run: |
        calculatedSha=$(git rev-parse --short ${{ github.sha }})
        echo "SHORTSHA=${calculatedSha}" >> "${GITHUB_ENV}"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        cache-from: type=gha
        cache-to: type=gha
        push: true
        tags: |
         ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}:${{ env.SHORTSHA }}
         ${{ secrets.REGISTRY_URL }}/${{ github.event.repository.name }}:latest


      

  
  
  